class Solution {
public:
    int maxProfit(vector<int>& prices) {
    //      int profit=0;
    //     for(int i=1;i<prices.size();i++){
    //         if(prices[i]>prices[i-1]){
    //             profit+=prices[i]-prices[i-1];
    //         }
    //     }
    // return profit;
         int n = prices.size();
        int dp[n+1][2];
        //vector<vector<int>> dp(n+1, vector<int>(2,0));
        dp[n][0] = dp[n][1] = 0;
        for(int i = n-1; i >= 0; i--){
            for(int buy = 0; buy <= 1; buy++){
                int profit = 0;
                if(buy){
                    profit = max((-prices[i] + dp[i+1][0]),
                    0 + dp[i+1][1]);
                }
                else{
                    profit = max((prices[i] + dp[i+1][1]),
                    0 + dp[i+1][0]);
                }
                dp[i][buy] = profit;
            }
        }
        return dp[0][1];
    }
};
